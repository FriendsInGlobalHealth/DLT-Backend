package domains;
// Generated Jun 13, 2022, 9:37:47 AM by Hibernate Tools 5.2.12.Final

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * BeneficiariesInterventions generated by hbm2java
 */
@Entity
@Table(name = "beneficiaries_interventions", catalog = "dreams_db")
public class BeneficiariesInterventions implements java.io.Serializable {

	private BeneficiariesInterventionsId id;
	private Beneficiaries beneficiaries;
	private SubServices subServices;
	private Us us;
	private String result;
	private Integer activistId;
	private String entryPoint;
	private String provider;
	private String remarks;
	private int status;
	private int createdBy;
	private Date dateCreated;
	private String updatedBy;
	private Date dateUpdated;
	private String offlineId;

	public BeneficiariesInterventions() {
	}

	public BeneficiariesInterventions(BeneficiariesInterventionsId id, Beneficiaries beneficiaries,
			SubServices subServices, Us us, String entryPoint, int status, int createdBy, Date dateCreated) {
		this.id = id;
		this.beneficiaries = beneficiaries;
		this.subServices = subServices;
		this.us = us;
		this.entryPoint = entryPoint;
		this.status = status;
		this.createdBy = createdBy;
		this.dateCreated = dateCreated;
	}

	public BeneficiariesInterventions(BeneficiariesInterventionsId id, Beneficiaries beneficiaries,
			SubServices subServices, Us us, String result, Integer activistId, String entryPoint, String provider,
			String remarks, int status, int createdBy, Date dateCreated, String updatedBy, Date dateUpdated,
			String offlineId) {
		this.id = id;
		this.beneficiaries = beneficiaries;
		this.subServices = subServices;
		this.us = us;
		this.result = result;
		this.activistId = activistId;
		this.entryPoint = entryPoint;
		this.provider = provider;
		this.remarks = remarks;
		this.status = status;
		this.createdBy = createdBy;
		this.dateCreated = dateCreated;
		this.updatedBy = updatedBy;
		this.dateUpdated = dateUpdated;
		this.offlineId = offlineId;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "beneficiaryId", column = @Column(name = "beneficiary_id", nullable = false)),
			@AttributeOverride(name = "subServiceId", column = @Column(name = "sub_service_id", nullable = false)),
			@AttributeOverride(name = "date", column = @Column(name = "date", nullable = false, length = 10)) })
	public BeneficiariesInterventionsId getId() {
		return this.id;
	}

	public void setId(BeneficiariesInterventionsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "beneficiary_id", nullable = false, insertable = false, updatable = false)
	public Beneficiaries getBeneficiaries() {
		return this.beneficiaries;
	}

	public void setBeneficiaries(Beneficiaries beneficiaries) {
		this.beneficiaries = beneficiaries;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sub_service_id", nullable = false, insertable = false, updatable = false)
	public SubServices getSubServices() {
		return this.subServices;
	}

	public void setSubServices(SubServices subServices) {
		this.subServices = subServices;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "us_id", nullable = false)
	public Us getUs() {
		return this.us;
	}

	public void setUs(Us us) {
		this.us = us;
	}

	@Column(name = "result", length = 150)
	public String getResult() {
		return this.result;
	}

	public void setResult(String result) {
		this.result = result;
	}

	@Column(name = "activist_id")
	public Integer getActivistId() {
		return this.activistId;
	}

	public void setActivistId(Integer activistId) {
		this.activistId = activistId;
	}

	@Column(name = "entry_point", nullable = false, length = 50)
	public String getEntryPoint() {
		return this.entryPoint;
	}

	public void setEntryPoint(String entryPoint) {
		this.entryPoint = entryPoint;
	}

	@Column(name = "provider", length = 100)
	public String getProvider() {
		return this.provider;
	}

	public void setProvider(String provider) {
		this.provider = provider;
	}

	@Column(name = "remarks", length = 250)
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@Column(name = "status", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name = "created_by", nullable = false)
	public int getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(int createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_created", nullable = false, length = 19)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Column(name = "updated_by", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_updated", length = 19)
	public Date getDateUpdated() {
		return this.dateUpdated;
	}

	public void setDateUpdated(Date dateUpdated) {
		this.dateUpdated = dateUpdated;
	}

	@Column(name = "offline_id", length = 45)
	public String getOfflineId() {
		return this.offlineId;
	}

	public void setOfflineId(String offlineId) {
		this.offlineId = offlineId;
	}

}
